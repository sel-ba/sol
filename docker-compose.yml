version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: nasa_postgres
    environment:
      POSTGRES_DB: nasa_space_bio
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d nasa_space_bio"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  neo4j:
    image: neo4j:5-community
    container_name: nasa_neo4j
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-changeme}
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./backend/database/neo4j_schema.cypher:/var/lib/neo4j/import/schema.cypher
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD:-changeme}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: nasa_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    container_name: nasa_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rag-service:
    build: ./backend/rag_service
    container_name: nasa_rag_service
    ports:
      - "8001:8001"
    environment:
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://admin:${POSTGRES_PASSWORD:-changeme}@postgres:5432/nasa_space_bio
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["full"]

  data-service:
    build: ./backend/data_service
    container_name: nasa_data_service
    ports:
      - "8002:8002"
    environment:
      - POSTGRES_URL=postgresql://admin:${POSTGRES_PASSWORD:-changeme}@postgres:5432/nasa_space_bio
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-changeme}
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    profiles: ["full"]

  avatar-service:
    build: ./backend/avatar_service
    container_name: nasa_avatar_service
    ports:
      - "8003:8003"
    environment:
      - REDIS_URL=redis://redis:6379
      - RAG_SERVICE_URL=http://rag-service:8001
    depends_on:
      - redis
      - rag-service
    restart: unless-stopped
    profiles: ["full"]

  api-gateway:
    build: ./backend/api_gateway
    container_name: nasa_api_gateway
    ports:
      - "8000:8000"
    environment:
      - RAG_SERVICE_URL=http://rag-service:8001
      - DATA_SERVICE_URL=http://data-service:8002
      - AVATAR_SERVICE_URL=http://avatar-service:8003
    depends_on:
      - rag-service
      - data-service
      - avatar-service
    restart: unless-stopped
    profiles: ["full"]

  frontend:
    build: ./frontend
    container_name: nasa_frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api-gateway
    restart: unless-stopped
    profiles: ["full"]

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  default:
    name: nasa_space_biology_network